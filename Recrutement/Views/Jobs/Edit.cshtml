@model Recrutement.Models.Job

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/shared/_MainLayout.cshtml";
}

<h2 class="alert alert-info">Modifier l'offre</h2>

@using (Html.BeginForm("Edit", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()



<div class="form-horizontal">
    <div class="alert alert-danger" id="error-div" style="display:none">
        <span id="view-err"></span>
    </div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.JobImage)

    <div class="form-group">
        @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobContent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JobContent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobContent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="upload" id="image" />
            @Html.ValidationMessageFor(model => model.JobImage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Modifier" class="btn btn-success" id="modifier" />
            @Html.ActionLink("Retour à la liste", "Index",null,new { @class="btn btn-danger" })
        </div>
    </div>
</div>
}


@section scripts{
    <script>
        $(function () {
            $("#modifier").click(function () {
                
                if ($("#image").val() != "") {
                    //check if the image extension is valid
                    var filename = $("#image").val();
                    var extensionImg = filename.substr(filename.lastIndexOf('.') + 1).toLowerCase();
                    var validExtensions = ['jpg', 'png', 'gif', 'bmp'];
                    if ($.inArray(extensionImg, validExtensions) == -1) {
                        $("#error-div").fadeIn();
                        $("#view-err").text("le fichier doit être une image [jpg,png,gif,bmp]");
                        return false;
                    }

                    //check if the image size

                    var myFileSize = document.getElementById("#image").files[0].size / (1024 * 1024);

                    if (myFileSize > 2) {
                        $("#error-div").fadeIn();
                        $("#view-err").text("le size de l'image doit être inferieur à 2mo");
                        return false;
                    }
                }

            });

            

        })
    </script>
}


